#include <iostream>

using namespace std;


typedef struct PNode
{
    float coef;
    int expn;
    struct PNode *next;
}PNode,*Polynomial;
void CreatePolyn(Polynomial &L,int n)  //输入存放多项式链表的指针L和多项式项数n,指针将作为该多项式的头结点
{
    L=new PNode;
    L->next=NULL;    //建立头结点
    Polynomial p,q,pre;    //结点p,q,q的前置结点pre
    for(int i=1;i<=n;i++)
    {
        p=new PNode;                //新插入的结点 p;
        p->next=NULL;
        cout<<endl<<"please input the coef and the exponent of "<<i<<"th nucha in order   "<<endl;
        cin>>p->coef>>p->expn;
        if(p->coef==0)
            continue;
        q=L->next;
        pre=L;
        while(q&&q->expn<=p->expn)
        {
                pre=q;
                q=q->next;
        }
        pre->next=p;
        p->next=q;
    }
}
void InsertPolyn(Polynomial &in,Polynomial &pre)
{
    in->next=pre->next;
    pre->next=in;
}
void ShowPolyn(Polynomial L)
{
    Polynomial p=L->next;
    cout<<endl;
    for(;p;p=p->next)
    {
        if(p->expn==0)
        {
            cout<<p->coef;
            if(p->next->coef>0)
            cout<<'+';
            continue;
        }
        cout<<p->coef<<'x'<<'^'<<p->expn;
        if(!p->next)  break;
        if(p->next->coef>0)
            cout<<'+';
    }
}
Polynomial AddPolyn(Polynomial pa,Polynomial pb)
{
    Polynomial pc=new PNode;
    pc->next=NULL;
    Polynomial pre=pc;
    Polynomial p1=pa->next;
    Polynomial p2=pb->next;
    Polynomial p3;
    int sum;
    while(pa&&pb)
    {
        p3=new PNode;
        if(p1->expn==p2->expn)
        {
            sum=p1->coef+p2->coef;
            if(sum==0)
            {
                p1=p1->next;
                p2=p2->next;
            }
            else
            {
                p3->coef=sum;
                p3->expn=p1->expn;
                InsertPolyn(p3,pre);
                pre=p3;
            }
        }
        else if(p1->expn<p2->expn)
        {
            p3->coef=p1->coef;
            p3->expn=p1->expn;
            InsertPolyn(p3,pre);
            pre=p3;
        }
        else{
            p3->coef=p2->coef;
            p3->expn=p2->expn;
            InsertPolyn(p3,pre);
            pre=p3;
        }
    }
    return pc;
}
int main()
{
    Polynomial pa,pb,pc;
    int n,m;
    cout<<"please input the number of the first polynomial:    ";
    cin>>n;
    CreatePolyn(pa,n);
    cout<<endl<<"please input the number of the second polynomial:    ";
    cin>>m;
    CreatePolyn(pb,m);
    pc=AddPolyn(pa,pb);
    cout<<"their sum is:  ";
    ShowPolyn(pc);
}

